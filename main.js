//REFACTOR NEEDED HERE
const { app, BrowserWindow,ipcMain } = require('electron')
const fs = require('fs')
const path = require('path');

//Global Variables
let filePath;

const Alert = require("electron-alert");

//Custom Alert Customisation
let alert = new Alert();
let swalOptions = {
    title:"Solution has been made",
    text:"Check your folder",
    type:"success"
}

//Sketch.js File contents, can be changed if needed
const sketchData = `//Sketch.js file generated by P5.js Project Generator 
                    function setup(){\n\n}\n 
                    function draw(){\n\n}`

//Create Window
function createWindow () {
  const win = new BrowserWindow({
    resizable: false, // Makes the window not resizeable
    width: 600,
    height: 1020,
    webPreferences: {
      nodeIntegration: true,
      enableRemoteModule : true
    },
    icon: __dirname + '/icon.ico'
    // titleBarStyle: "hidden"
  });
  win.removeMenu();
  win.loadFile('index.html');
  
}

app.whenReady().then(createWindow)

//Builds all the HTML
function buildHTML(array){
  filename = "index.html"
  let header = ""
  let body = ""

  for(let i = 0; i < array.length; i++)
  {
    if(array[i].value == true)
    {
      console.log("Path Value : " + path.join(filePath, array[i].link))

      console.log("Array value " + "./" + array[i].link)
      //Copies the source file to the new array
      fs.copyFile("./" + array[i].link, path.join(filePath,"/" + array[i].link),(err) => {if(err) throw err;})
      
      let link = `<script src="${array[i].link}"></script>\n`
      console.log("Link Value " + array[i].link);
      header += link;
    }
    else
    {
      console.log("False")
    }
  }

  //Linking the sketch file
  header += `<script src="sketch.js"></script>\n`

  return '<!DOCTYPE html>'
  + '<html>\n<head>\n' + header + '</head>\n<body>\n' + body + '</body>\n</html>\n';
}

// https://www.geeksforgeeks.org/node-js-fs-mkdir-method/
ipcMain.on('folderSelection', (event, arg) => {
    //Grabs the file path
    filePath = path.join(arg.path.filePaths[0],arg.solution);

    //Creates Root Folder
    fs.mkdir(filePath,function(err){
      if (err) { 
        return console.error(err); 
      }
    })
    //Library creation
    fs.mkdir(path.join(filePath,'/libs'),function(err){
      if (err){
        return console.error(err);
      }
    })

    let HTMLContent = buildHTML(arg.values); 
    console.log(HTMLContent);

    fs.writeFile(path.join(filePath,"index.html"),HTMLContent,function (err) {
      if (err) throw err;
      console.log('File has been created');
    })
    fs.writeFile(path.join(filePath,"sketch.js"), sketchData,function (err) {
      if (err) throw err;
      console.log('File has been created');
    })

    alert.fireFrameless(swalOptions,null,true,false);

})

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow()
  }
})
